datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int    @id @default(autoincrement())
  username  String @unique
  email     String @unique
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  modifiedAt DateTime @default(now())
  createdBy Int?
  modifiedBy Int?
  creator   User?   @relation("UserCreatedBy", fields: [createdBy], references: [id])
  modifier  User?   @relation("UserModifiedBy", fields: [modifiedBy], references: [id])
  createdUsers User[] @relation("UserCreatedBy")
  modifiedUsers User[] @relation("UserModifiedBy")
  countriesCreated Country[] @relation("CountryCreatedBy")
  countriesModified Country[] @relation("CountryModifiedBy")
  animalsCreated Animal[] @relation("AnimalCreatedBy")
  animalsModified Animal[] @relation("AnimalModifiedBy")
  domainsCreated Domain[] @relation("DomainCreatedBy")
  domainsModified Domain[] @relation("DomainModifiedBy")
}

model Country {
  id        Int    @id @default(autoincrement())
  name      String
  capital   String?
  population Int?
  area      Float?
  currency  String?
  continent String
  createdAt DateTime @default(now())
  modifiedAt DateTime?
  createdBy Int?
  modifiedBy Int?
  creator   User?   @relation("CountryCreatedBy", fields: [createdBy], references: [id])
  modifier  User?   @relation("CountryModifiedBy", fields: [modifiedBy], references: [id])
}

model Animal {
  id                  Int    @id @default(autoincrement())
  name                String
  species             String?
  habitat             String?
  diet                String?
  conservation_status String?
  category            String
  createdAt DateTime @default(now())
  modifiedAt DateTime?
  createdBy Int?
  modifiedBy Int?
  creator   User?   @relation("AnimalCreatedBy", fields: [createdBy], references: [id])
  modifier  User?   @relation("AnimalModifiedBy", fields: [modifiedBy], references: [id])
}

model Domain {
  id         Int      @id @default(autoincrement())
  name       String
  parentId   Int?
  parent     Domain?  @relation("DomainParent", fields: [parentId], references: [id])
  children   Domain[] @relation("DomainParent")
  createdAt  DateTime @default(now())
  modifiedAt DateTime?
  createdBy  Int?
  modifiedBy Int?
  creator    User?   @relation("DomainCreatedBy", fields: [createdBy], references: [id])
  modifier   User?   @relation("DomainModifiedBy", fields: [modifiedBy], references: [id])
}
